# -------------- This is a Docker Compose file for running the Skill Forge application stack locally --------------
services:
  # ─── MongoDB ──────────────────────────────────────
  mongo:
    image: mongo:7.0
    container_name: skill-forge-mongo-db
    restart: unless-stopped
    ports:
      - "${MONGODB_EXPOSED_PORT:-27017}:27017"
    env_file:
      - .env
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval \"db.adminCommand('ping')\" > /dev/null 2>&1"]
      interval: 360s
      timeout: 10s
      retries: 5
      start_period: 20s
    logging:
      driver: "none"
    networks:
      - app-network

  # ─── Spring Boot Server: Gateway ──────────────────────────────
  server-gateway:
    build:
      context: ./server/skillforge-gateway
      dockerfile: Dockerfile
    image: skill-forge-server-gateway:latest
    container_name: skill-forge-server-gateway
    restart: unless-stopped
    ports:
      - "${SERVER_PORT_GATEWAY:-8081}:${SERVER_PORT_GATEWAY:-8081}"
    env_file:
      - .env
    environment:
      SPRING_PROFILE_ACTIVES: ${SPRING_PROFILE_ACTIVES:-docker}
      SERVER_PORT_GATEWAY: ${SERVER_PORT_GATEWAY:-8081}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SERVER_PORT_GATEWAY:-8081}/actuator/health || exit 1"]
      interval: 360s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - app-network
  
  # ─── Spring Boot Server: User Service ──────────────────────────────
  user-service:
    build:
      context: ./server/skillforge-user
      dockerfile: Dockerfile
    image: skill-forge-server-user:latest
    container_name: skill-forge-server-user
    restart: unless-stopped
    ports:
      - "${SERVER_PORT_USER:-8082}:${SERVER_PORT_USER:-8082}"
    env_file:
      - .env
    environment:
      SPRING_PROFILE_ACTIVES: ${SPRING_PROFILE_ACTIVES:-docker}
      SERVER_PORT_USER: ${SERVER_PORT_USER:-8082}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_HOST: mongo
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS}
    depends_on:
      server-gateway:
        condition: service_healthy
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SERVER_PORT_USER:-8082}/actuator/health || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
  
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_APP_NAME: ${VITE_APP_NAME:-SkillForge.ai}
        VITE_APP_VERSION: ${VITE_APP_VERSION:-1.0.0}
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api}
        VITE_API_VERSION: ${VITE_API_VERSION:-v1}
        VITE_PUBLIC_API_URL: ${VITE_PUBLIC_API_URL:-http://server.localhost:8081/api}
        VITE_API_INTERNAL_HOST: ${VITE_API_INTERNAL_HOST:-server-gateway}
        VITE_API_INTERNAL_PORT: ${VITE_API_INTERNAL_PORT:-8081}
        BUILD_MODE: ${BUILD_MODE:-production}
        VITE_PORT: ${VITE_PORT:-3000}
    image: skill-forge-client:latest
    container_name: skill-forge-client
    environment:
      VITE_PORT: ${VITE_PORT:-3000}
      VITE_APP_NAME: "${VITE_APP_NAME:-SkillForge.ai}"
      VITE_APP_VERSION: "${VITE_APP_VERSION:-1.0.0}"
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api}
      VITE_API_VERSION: ${VITE_API_VERSION:-v1}
      VITE_API_INTERNAL_HOST: ${VITE_API_INTERNAL_HOST:-server-gateway}
      VITE_API_INTERNAL_PORT: ${VITE_API_INTERNAL_PORT:-8081}
      VITE_PUBLIC_API_URL: ${VITE_PUBLIC_API_URL:-http://server.localhost:8081/api}
    restart: unless-stopped
    ports:
      - "${VITE_PORT:-3000}:3000"
    depends_on:
      user-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:${VITE_PORT:-3000} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
  
  weaviate-db:
      image: cr.weaviate.io/semitechnologies/weaviate:1.30.3
      container_name: skill-forge-weaviate
      restart: unless-stopped
      command:
        - --host
        - 0.0.0.0
        - --port
        - "8080"
        - --scheme
        - http
      ports:
        - "${WEAVIATE_EXPOSED_HTTP_PORT:-8080}:8080"
        - "${WEAVIATE_EXPOSED_GRPC_PORT:-50051}:50051"
      environment:
        QUERY_DEFAULTS_LIMIT: 25
        AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
        PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
        BACKUP_FILESYSTEM_PATH: '/var/lib/weaviate/backups'
        ENABLE_API_BASED_MODULES: 'true'
        CLUSTER_HOSTNAME: 'node1'
      volumes:
        - weaviate-genai-data:/var/lib/weaviate
      healthcheck:
        test: ["CMD-SHELL", "wget --spider -q http://localhost:8080/v1/.well-known/ready || exit 1"]
        interval: 10s
        timeout: 5s
        retries: 10
        start_period: 10s
      networks:
        - app-network

  genai:
    build:
      context: ./genai
      dockerfile: Dockerfile
      args:
        GENAI_APP_NAME: ${GENAI_APP_NAME:-SkillForge GenAI}
        GENAI_APP_VERSION: ${GENAI_APP_VERSION:-1.0.0}
        GENAI_PORT: ${GENAI_PORT:-8888}
        UVICORN_WORKERS: ${UVICORN_WORKERS:-2}
        CORS_ALLOW_ORIGINS: ${CORS_ALLOW_ORIGINS:-*}
    image: skill-forge-genai:latest
    container_name: skill-forge-genai
    restart: unless-stopped
    env_file:
      - .env
    environment:
      WEAVIATE_HOST: ${WEAVIATE_HOST:-weaviate-db}
      WEAVIATE_HTTP_PORT: 8080
      WEAVIATE_GRPC_PORT: 50051
      GENAI_PORT: ${GENAI_PORT:-8888}
      GENAI_APP_NAME: ${GENAI_APP_NAME:-SkillForge GenAI}
      GENAI_APP_VERSION: ${GENAI_APP_VERSION:-1.0.0}
      LLM_PROVIDER: ${LLM_PROVIDER:-openai}
      OPENAI_API_BASE: ${OPENAI_API_BASE:-https://api.openai.com/v1}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o-mini}
    ports:
      - "${GENAI_PORT:-8888}:${GENAI_PORT:-8888}"
    depends_on:
      weaviate-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${GENAI_PORT:-8888}/ping || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

volumes:
  mongo-data:
  weaviate-genai-data:

networks:
  app-network:
    driver: bridge