server:
    http_listen_port: ${PROMTAIL_LISTEN_PORT:-9080}

positions:
  filename: /tmp/positions.yaml

clients:
    - url: http://loki:${LOKI_INTERNAL_PORT:-3100}/loki/api/v1/push

scrape_configs:
  # Method 1: Direct file access to Docker logs
  - job_name: docker-json-files
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - json:
          expressions:
            log: log
            stream: stream
            time: time
            attrs: attrs
      - json:
          expressions:
            level: level
            message: message
            logger: logger
          source: log
      - labels:
          level:
          logger:
          stream:
      - timestamp:
          source: time
          format: RFC3339Nano
      - output:
          source: message
          # Fall back to full log if message extraction fails
          fallback_format: '{{ if .log }}{{ .log }}{{ else }}{{ .Output }}{{ end }}'

  # Method 2: Keep Docker API method as fallback
  - job_name: docker-api
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            logger: logger
      - labels:
          level:
          logger:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message
