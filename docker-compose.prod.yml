services:
  reverse-proxy:
      image: traefik:v3.4
      container_name: traefik
      restart: unless-stopped
      command:
        - "--providers.docker=true"
        - "--providers.docker.exposedByDefault=false"
        - "--entrypoints.web.address=:80"
        - "--entrypoints.websecure.address=:443"
        - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
        - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
        - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
        - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
        - "--certificatesresolvers.letsencrypt.acme.email=admin@tum.de"
        - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
        # For local test add:
        # - "--api.dashboard=true"
        # - "--api.insecure=true"
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - ./letsencrypt:/letsencrypt
      networks:
        - app-network

  # ─── Spring Boot Server ──────────────────────────────
  server-gateway:
    image: ghcr.io/aet-devops25/team-git-it-together/server-gateway:latest
    container_name: skill-forge-server-gateway
    restart: unless-stopped
    ports:
      - "${SERVER_PORT_GATEWAY:-8081}:${SERVER_PORT_GATEWAY:-8081}"
    env_file:
      - .env
    environment:
      SPRING_PROFILE_ACTIVES: ${SPRING_PROFILE_ACTIVES:-prod}
      SERVER_PORT_GATEWAY: ${SERVER_PORT_GATEWAY:-8081}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SERVER_PORT_GATEWAY:-8081}/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    labels:
        # Route 1: API direct domain (api........io)
      - "traefik.http.routers.gateway-api.rule=Host(`${SERVER_HOST}`)"
      - "traefik.http.routers.gateway-api.entrypoints=websecure"
      - "traefik.http.routers.gateway-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.gateway-api.service=gateway"
      # Route 2: API on the client domain
      - "traefik.http.routers.gateway-client.rule=Host(`${CLIENT_HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.gateway-client.entrypoints=websecure"
      - "traefik.http.routers.gateway-client.tls.certresolver=letsencrypt"
      - "traefik.http.routers.gateway-client.service=gateway"
      # Service config:
      - "traefik.http.services.gateway.loadbalancer.server.port=${SERVER_PORT_GATEWAY:-8081}"
    networks:
      - app-network
  user-service:
    image: ghcr.io/aet-devops25/team-git-it-together/user-service:latest
    container_name: skill-forge-server-user
    restart: unless-stopped
    ports:
      - "${SERVER_PORT_USER:-8082}:${SERVER_PORT_USER:-8082}"
    env_file:
      - .env
    environment:
      SPRING_PROFILE_ACTIVES: ${SPRING_PROFILE_ACTIVES:-prod}
      SERVER_PORT_USER: ${SERVER_PORT_USER:-8082}
      MONGODB_DATABASE: ${MONGODB_DATABASE:-skillForge}
      MONGODB_USERNAME: ${MONGODB_USERNAME:-skillForgeDevops25}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS:-3600000}
    depends_on:
      server-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SERVER_PORT_USER:-8082}/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - app-network
  
  client:
    image: ghcr.io/aet-devops25/team-git-it-together/client:latest
    container_name: skill-forge-client
    restart: unless-stopped
    ports:
      - "${VITE_PORT:-3000}:${VITE_PORT:-3000}"
    env_file:
      - .env
    environment:
      VITE_PORT: ${VITE_PORT:-3000}
      BUILD_MODE: ${BUILD_MODE:-production}
      VITE_APP_NAME: "${VITE_APP_NAME:-SkillForge.ai}"
      VITE_APP_VERSION: "${VITE_APP_VERSION:-1.0.0}"
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api}
      VITE_API_VERSION: ${VITE_API_VERSION:-v1}
      VITE_PUBLIC_API_URL: ${VITE_PUBLIC_API_URL:-http://server.localhost:8081/api}
      VITE_API_INTERNAL_HOST: ${VITE_API_INTERNAL_HOST:-server-gateway}
      VITE_API_INTERNAL_PORT: ${VITE_API_INTERNAL_PORT:-8081}
    depends_on:
      user-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:${VITE_PORT:-3000} || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`${CLIENT_HOST}`)"
      - "traefik.http.services.client.loadbalancer.server.port=${VITE_PORT:-3000}"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.client-compress.compress=true"
      - "traefik.http.routers.client.middlewares=client-compress"
      - "traefik.http.routers.client.priority=1"
    networks:
      - app-network
  
  weaviate-db:
      image: cr.weaviate.io/semitechnologies/weaviate:1.30.3
      container_name: skill-forge-weaviate
      restart: on-failure
      command:
        - --host
        - 0.0.0.0
        - --port
        - "8080"
        - --scheme
        - http
      ports:
        - "${WEAVIATE_EXPOSED_HTTP_PORT:-8080}:8080"
        - "${WEAVIATE_EXPOSED_GRPC_PORT:-50051}:50051"
      environment:
        QUERY_DEFAULTS_LIMIT: 25
        AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
        PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
        #BACKUP_FILESYSTEM_PATH: '/var/lib/weaviate/backups'
        ENABLE_API_BASED_MODULES: 'true'
        CLUSTER_HOSTNAME: 'node1'
      volumes:
        - weaviate-genai-data:/var/lib/weaviate
      healthcheck:
        test: ["CMD-SHELL", "wget --spider -q http://localhost:8080/v1/.well-known/ready || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 50s
      networks:
        - app-network

  genai:
    image: ghcr.io/aet-devops25/team-git-it-together/genai:latest
    container_name: skill-forge-genai
    restart: unless-stopped
    env_file:
      - .env
    environment:
      WEAVIATE_HOST: ${WEAVIATE_HOST:-weaviate-db}
      WEAVIATE_HTTP_PORT: 8080
      WEAVIATE_GRPC_PORT: 50051
      GENAI_PORT: ${GENAI_PORT:-8888}
      GENAI_APP_NAME: "${GENAI_APP_NAME:-SkillForge GenAI}"
      GENAI_APP_VERSION: "${GENAI_APP_VERSION:-1.0.0}"
      CORS_ALLOW_ORIGINS: ${CORS_ALLOW_ORIGINS:-*}
      IS_DEV_MODE: ${IS_DEV_MODE:-0}
      UVICORN_WORKERS: ${UVICORN_WORKERS:-1}
      LLM_PROVIDER: ${LLM_PROVIDER:-openai}
      OPENAI_API_BASE: ${OPENAI_API_BASE:-https://api.openai.com/v1}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o-mini}
    ports:
      - "${GENAI_PORT:-8888}:${GENAI_PORT:-8888}"
    depends_on:
      weaviate-db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.genai.rule=Host(`genai.${SERVER_HOST:-server.localhost}`)"
      - "traefik.http.routers.genai.entrypoints=websecure"
      - "traefik.http.routers.genai.tls.certresolver=letsencrypt"
      - "traefik.http.services.genai.loadbalancer.server.port=${GENAI_PORT:-8888}"
      - "traefik.http.middlewares.genai-cors.headers.accessControlAllowOriginList=${CORS_ALLOW_ORIGINS:-*}"
      - "traefik.http.routers.genai.middlewares=genai-cors@docker"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${GENAI_PORT:-8888}/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 50s
    networks:
      - app-network

volumes:
  weaviate-genai-data:

networks:
  app-network:
    driver: bridge