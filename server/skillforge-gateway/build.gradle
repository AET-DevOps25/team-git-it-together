plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.gitittogether.skillforge.server'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway-server-webflux'
 	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	compileOnly 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.100.Final:osx-aarch_64'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	// Enable parallel test execution
	maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
	// JVM optimizations for faster startup
	jvmArgs = [
		'-Xmx512m',
		'-Xms256m',
		'-XX:+UseG1GC',
		'-XX:MaxGCPauseMillis=200',
		'-XX:+UseStringDeduplication',
		'-XX:+OptimizeStringConcat',
		'-Djava.security.egd=file:/dev/./urandom',
		'-Dspring.profiles.active=test'
	]
	forkEvery = 1
	failFast = false
	testLogging {
		events "passed", "skipped", "failed"
		exceptionFormat = 'full'
		showStandardStreams = false
	}
	useJUnitPlatform()
	exclude '**/*IntegrationTest*'
	exclude '**/*E2ETest*'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Configure Gradle daemon for better performance
gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
	}
}
